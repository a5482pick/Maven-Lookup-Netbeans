package com.mycompany.history;

import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.util.Lookup.Result;
import org.openide.util.LookupEvent;
import org.openide.util.LookupListener;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;
import org.openide.util.Utilities;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//com.mycompany.history//History//EN",
        autostore = false
)
@TopComponent.Description(
        preferredID = "HistoryTopComponent",
        //iconBase="SET/PATH/TO/ICON/HERE", 
        persistenceType = TopComponent.PERSISTENCE_ALWAYS
)
@TopComponent.Registration(mode = "editor", openAtStartup = false)
@ActionID(category = "Window", id = "com.mycompany.history.HistoryTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_HistoryAction",
        preferredID = "HistoryTopComponent"
)
@Messages({
    "CTL_HistoryAction=History",
    "CTL_HistoryTopComponent=History Window",
    "HINT_HistoryTopComponent=This is a History window"
})
public final class HistoryTopComponent extends TopComponent implements LookupListener {

    //This will hold Lookup results corresponding to the String class.
    Result<String> stringsInSelectedWindow;
    
    public HistoryTopComponent() {
        
        initComponents();
        setName(Bundle.CTL_HistoryTopComponent());
        setToolTipText(Bundle.HINT_HistoryTopComponent());

    }
    
    @Override 
    public void resultChanged(LookupEvent le) {
        
        StringBuilder sb = new StringBuilder(); 
        
        for (String string : stringsInSelectedWindow.allInstances()) { 
            sb.append(string).append('\n');
        }
            
        historyText.setText(sb.toString()); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        historyText = new javax.swing.JTextArea();

        historyText.setColumns(20);
        historyText.setRows(5);
        jScrollPane1.setViewportView(historyText);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(128, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(179, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea historyText;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
    
    @Override public void componentOpened() {
        
        //On opening this TopComponent, add a listener for changes in the Lookup of the active component.
        //We're specifically listening for changes in instances of class String.
        stringsInSelectedWindow = Utilities.actionsGlobalContext().lookupResult(String.class); 
        stringsInSelectedWindow.addLookupListener(this); 
        
        //Register the opening of the component in the console.
        System.out.println("COMPONENT OPENED.");
    }

    @Override
    public void componentClosed() {
        
        //Remove the Lookup listener when this TopComponent closes.
        stringsInSelectedWindow.removeLookupListener(this);
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
    }

    void readProperties(java.util.Properties p) {
        
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
}
